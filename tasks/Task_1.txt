

/*
. В качестве решения достаточно выслать текстовый файл с кодом написанных функции/методов.

Написать метод/функцию, который/которая на вход принимает массив городов. В качестве результата возвращает строку, где города разделены запятыми, а в конце стоит точка. Например, «Москва, Санкт-Петербург, Воронеж.»

Написать метод/функцию, который/которая на вход принимает число (float), а на выходе получает число, округленное до пятерок.
Пример:
27 => 25, 27.8 => 30, 41.7 => 40.

Написать метод/функцию, который/которая на вход принимает число (int), а на выходе выдает слово “компьютер” в падеже, соответствующем указанному количеству. Например, «25 компьютеров», «41 компьютер», «1048 компьютеров».

Написать метод/функцию, который/которая на вход принимает целое число, а на выходе возвращает то, является ли число простым (не имеет делителей кроме 1 и самого себя).

Написать метод, который определяет, какие элементы присутствуют в двух экземплярах в каждом из массивов (= в двух и более, причем в каждом).
На вход подаются два массива.
На выходе массив с необходимыми совпадениями.
Пример:
[7, 17, 1, 9, 1, 17, 56, 56, 23], [56, 17, 17, 1, 23, 34, 23, 1, 8, 1]
На выходе [1, 17]

*/

package main

import "fmt"

// 5 минут

func main() {
	cities := [6]string{"Воронеж", "Москва", "Санкт-Петербург", "Воронеж", "Екатеринбург", "Челябинск"}
	fmt.Println(redactCities(cities))
}

func redactCities(cities [6]string) (citiesStr string) {

	citiesStr += cities[0]
	for i := 1; i < len(cities); i++ {
		citiesStr += ", " + cities[i]
	}
	citiesStr += "."
	return
}
